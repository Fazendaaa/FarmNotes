{
    "format_version": 1,
    "document": {
        "kind": "document",
        "key": "90ef6de9e19b4d2594d1ec5c8b84e026",
        "data": {
            "schema_version": 3
        },
        "nodes": [
            {
                "kind": "block",
                "type": "paragraph",
                "key": "c9a5de65351049358b094337a947c0b6",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "00f2f4becd514c5e9fd77fb8b6da7287",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Reading about clean code promises and patterns, this notes are taken through this process. Begining at the "
                            }
                        ]
                    },
                    {
                        "kind": "inline",
                        "type": "link",
                        "key": "5c3a67b09bc0458e8033776a10955828",
                        "isVoid": false,
                        "data": {
                            "href": "https://www.amazon.com.br/Clean-Code-Handbook-Software-Craftsmanship-ebook/dp/B001GSTOAM?__mk_pt_BR=%C3%85M%C3%85%C5%BD%C3%95%C3%91&keywords=Clean+Code&qid=1525260282&sr=8-3&ref=sr_1_3"
                        },
                        "nodes": [
                            {
                                "kind": "text",
                                "key": "15b1ef3a88d342ae865eb6da9c080829",
                                "ranges": [
                                    {
                                        "kind": "range",
                                        "marks": [
                                            {
                                                "kind": "mark",
                                                "data": {},
                                                "type": "bold"
                                            }
                                        ],
                                        "text": "Clean Code"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "text",
                        "key": "bdc67ee6cb6f4f0a9e83ed824c5c1f13",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": " book and some of my own. The ideia behind this project is to make an open book that anyone could copy, add and modify due your own needs; a collaborative way to improve software development through the learning process of making it easy for others to understand."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "b0ef3b6e557d4f9ba2995c100c08f5c9",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "f9a9a45159c1420bb5014dbc49c78b7a",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "First adivice is to have right by your side a Design Patterns by GoF to follow along some concepts; I bought mine used through a site called "
                            }
                        ]
                    },
                    {
                        "kind": "inline",
                        "type": "link",
                        "key": "0b8b4883a6834a75a523a86b77a9b3ed",
                        "isVoid": false,
                        "data": {
                            "href": "https://www.estantevirtual.com.br/"
                        },
                        "nodes": [
                            {
                                "kind": "text",
                                "key": "57ebb4ceeb844c36965c0391fa32c33c",
                                "ranges": [
                                    {
                                        "kind": "range",
                                        "marks": [],
                                        "text": "Estante Virtual"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "text",
                        "key": "72cd30f73bd04ea5aba08ac3f6377d43",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "22757502d9df47fe91373fb4f480a1d4",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "5a4eacdd3f8b4d418753682200b359cd",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "The 5S"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "e28e2bb8513a4fbd86f38c7254df0d96",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "15b6c1d496e948ef9aec4f2ba79e1c2b",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "In 1951, the japanese Total Productive Maintenance(TPM) culture instaured the 5S:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "list-unordered",
                "key": "dc51370e3a344183bfaeec4a4a4e36e5",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "742d8e0d75584aa8a927f0877c8f9e5a",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "f65c33827cb542e2bac03f587bbd6eab",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "e948247327444b23ba09d1c9f956895d",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "Seiri"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": " (\"Sort\"): knowing what and when;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "607efad9438243c4a15d001951de56e8",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "522dadd4e5aa4e9d94b3b106828858bf",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "163b4233cc2f4b87926c431071caba46",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "Seiton"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "(\"Systematize\"): everything has it's place;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "773448d674154be88a7cf761d5174c74",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "8ef0cc6b4a5d4bd895ad962e20061f86",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "c0570d5f67ea4bc9a63a2625cb823676",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "Seiso"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "(\"Shine\"): it must speak by itself;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "4ef92f45d688496ca207ac1895e9c74c",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "5c958e3f62834a91b017bf284cafe286",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "b85d0ddfc5564efbbc423d73c8f0c5e4",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "Siketsu"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "(\"Standardization\"): follow the rules;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "3d9958e971114a3c84340ffb9c327fa2",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "e48c78d91a144e2d910d0f259fa577a1",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "58f83e7c49384565a6dda3774650bb9a",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "Shutsuke"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "(\"Self-discipline\"): "
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "reflect on one's work and be willing tho change."
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "2806c173fbff497ab7d193ae9fc54371",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "50108845509a4b2a89ff6dbd03093f77",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "The overview"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "3080401369b64b2fb1fb4b0c236e9764",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "d7d5f17dda1a4096955e8a254cd83c69",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "The act of design must be, by itself, as an smal local act of repair. In the book is said that the simple act of code indetation could reduce considerably the number of bugs in a "
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "italic"
                                    }
                                ],
                                "text": "back-of-the-envelope"
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": " discover at Bell Labs; but I didn't find anything about this that endorses this ideia."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "embed",
                "key": "6560e2b20fa04f6f8285927ef3a9b8ac",
                "isVoid": true,
                "data": {
                    "url": "http://www.osnews.com/images/comics/wtfm.jpg",
                    "type": "image",
                    "embed": {
                        "type": "image",
                        "url": "http://www.osnews.com/images/comics/wtfm.jpg",
                        "width": 500,
                        "height": 471,
                        "aspectRatio": 0.942
                    }
                },
                "nodes": [
                    {
                        "kind": "text",
                        "key": "0084c34409ae4b73b9b873c894573d66",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": ""
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "411a99d466d14ddd9c0811e8c2e7b84a",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "bfb510da75dd4d5580d5b4f83fff29d9",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "italic"
                                    }
                                ],
                                "text": "Wanding"
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": " is the act of \"wonder around\" a bad code in a way that repels you of making anything. Probably because who wrote the code followed the "
                            }
                        ]
                    },
                    {
                        "kind": "inline",
                        "type": "link",
                        "key": "c6bc651ae12d49eca673abaf30b18ab9",
                        "isVoid": false,
                        "data": {
                            "href": "https://en.wikipedia.org/wiki/Talk%3AList_of_eponymous_laws#Proposal_to_add_LeBlanc's_law"
                        },
                        "nodes": [
                            {
                                "kind": "text",
                                "key": "e08f3a0b6ac64779ae048b480f482a86",
                                "ranges": [
                                    {
                                        "kind": "range",
                                        "marks": [
                                            {
                                                "kind": "mark",
                                                "data": {},
                                                "type": "bold"
                                            }
                                        ],
                                        "text": "LeBlanc's Law"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "text",
                        "key": "ce8bb6e12c714af6a9dc4c647843c21d",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "bold"
                                    }
                                ],
                                "text": ":"
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "italic"
                                    }
                                ],
                                "text": " "
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "\"later equals never\"."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-2",
                "key": "a965048cb0704e1f9914ae3f38d01a76",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "a2551b1790c34af8ba0f58b2b8c752df",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "The Art of Clean Code?"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "e84a762c2f664284b036ebc74b7dbd3e",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "a048217d5b7642f78b9ff401f26fd34b",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Programming is a kind of art: "
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "italic"
                                    }
                                ],
                                "text": "the artists want make something beautiful and new, even if is not that new for the whole world or actually all the beautiful... But is new and beautiful to them"
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": ". And that's why a team stuck with a bad code loses it's productivity also, because no one is creating something."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "b0e258dfc2464311b85a8f52ba7e405e",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "14a27d8b4a72489dabbc72e28cc069e1",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Being able to spot a bad code doesn't mean that you know how to fix or even re-factoring making it a better one. The one who seeks the best isn't always the one who finds it."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "1963cd7ee53747cdade215addf1bf046",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "f655bea439c44d73b0d6ac403c5a7501",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Coding is the final tool, anyone can measure anything through it: eficiency, manutenability, readability , \"monolitch\"(bility), even the worstability! And that means that, someone behind the keyboard who wrote it, can be measure also; the funny thing is that is \"easy\" for a code to be good at something at some point and bad at all things all the way, this feeling of \"at least one\" that can make some programmers ego goes up and become lazy to improve. Nonetheless to say that those ugly things that make the code bad could make it not work at all after some time."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "85efc071a0e5486d9dba73bc86fcbd6d",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "e116a610df51438cb0de450918f65d31",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "MacBook's dictionary definition of "
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "bold"
                                    }
                                ],
                                "text": "crisp"
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": ": "
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "italic"
                                    }
                                ],
                                "text": "\"briskly decisive and matter-of-fact, without hesitation or unnecessary detail.\""
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "... That being said, a good code should be at least a "
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "italic"
                                    }
                                ],
                                "text": "crisp one."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "1245d8c005734b3dacbbee184b0446db",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "755b42ae49ff40f8a84e4277837a3d43",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "One definition of clean code that I particurally liked a lot is that a clean code makes it easy for othewr people to enhance it, and that's is linked to \"Big\" Dave Thomas, founder of OTI. I do really like when someone do a code review of something that I've wrote, but if there's nothing add to it the empty feels fulls me up -- no pun intended hahahah"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "embed",
                "key": "f096faf0e3414f5a841f12883ec985a6",
                "isVoid": true,
                "data": {
                    "url": "https://imgs.xkcd.com/comics/automation.png",
                    "type": "image",
                    "embed": {
                        "type": "image",
                        "url": "https://imgs.xkcd.com/comics/automation.png",
                        "width": 404,
                        "height": 408,
                        "aspectRatio": 1.00990099009901
                    },
                    "caption": "https://xkcd.com/1319/"
                },
                "nodes": [
                    {
                        "kind": "text",
                        "key": "ac0dc099d85b4e25bab90ab12137d585",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": ""
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "818e5cc4e1ea4631be833406c1fec161",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "6327a7cdf41944d4b9321c48b53b6b40",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Naming variables"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "list-unordered",
                "key": "9d46ecaaf02344b5b917a15529890963",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "7b9300b372c94569bf442a4900018e09",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "42a7bbc0f4f448d2a0a24fc236c71897",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "38a2852a23584aab989255c544ed7051",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "A good abbreviation could be a disinformative one also;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "d9aaa543312e4dc38e54caa096cea968",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "4dd37eb367b34fe49c2d15eb6351c71d",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "c6ae55d5e80b469dafb1bcbac693051c",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Do not use structre names on variables like queue or list, even if they do represent a variable that is one of them could you future-proof this?"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "9d8fa7dd5b7b46f2a7ad3ef928983ba2",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "aaa3911ec107466fa40a8aedc817b5ed",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "468fa2dac4b94ecf88993f3d67e37f6f",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Names like "
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "a, an, the, info, new "
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "and "
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "data"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": " should be avoided;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "15eba477cd414595af75b9d4f245f70b",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "41a329fa6c72422c922a011db020590f",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "47b73bcdc99749e79dd871cec91c8af5",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Use searchable names;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "3f2899c3d49a42c58c3031bded6f7d51",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "bfc3ce6ac84143a69b17633932769cbf",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "a9334b2f69bc49f58242b853980fc677",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Methods should have a verb or a verb pharse names;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "6bdf64f390c844b1bd30dbb1b3e7e1ee",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "4314c615b19849699c25af0329d322d7",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "37b788cf81444f3b8ec5afc1c2177466",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Pick only one, don't use "
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "fetch, retrive "
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "or "
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "get"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": " through out the code;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "ced70fd356514037a58ba445dcdfe612",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "9ed43c8310ec43e3952c65452b5eca5f",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "7cf68cc95558463da45f17935e2a1a56",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Add a meaningful context -- that remminds me, in a way, "
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "One level of indentation per method"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": " from "
                                            }
                                        ]
                                    },
                                    {
                                        "kind": "inline",
                                        "type": "link",
                                        "key": "20da32b5989d4b17b9e384559e75c177",
                                        "isVoid": false,
                                        "data": {
                                            "href": "https://gist.github.com/suissa/79aa860161b13e50e5fa3a0120fb6d68"
                                        },
                                        "nodes": [
                                            {
                                                "kind": "text",
                                                "key": "0125996850b24ce583bd2a851894fb34",
                                                "ranges": [
                                                    {
                                                        "kind": "range",
                                                        "marks": [],
                                                        "text": "Object Calisthenics"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "kind": "text",
                                        "key": "485ae80040844c8c8a806dda14e61df6",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": ";"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "b3ae9ea654cd4a3f86b6b064fe6c6739",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "208e4bec3fc94caea667f81446018641",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "b0ce0ffa04c8409280ad237e2287864f",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Don't add more context to a name more than necessary;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "c583690c9ba24d20b1c1161b61d6a3bd",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "d90db6745fba4c338bd547738d9f3607",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Functions"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "list-unordered",
                "key": "21bf41ff39444e72b2945bbf32dd1651",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "a17664224c20405aa0f46ab5d0c974a0",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "9558c6c2111649b4a0b2ea7658f217eb",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "33dde4b029ac4cf3893d9a80fb6841a0",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "\"The first rule of functions is that they should be small. The scond rule of fucntions is that "
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "italic"
                                                    }
                                                ],
                                                "text": "they should be smaller"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": ".\";"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "1ec5f568a09d44b2a02aa385d61dd506",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "72ffa9a51a0349b18cb43f5ed356155c",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "6af039e61b204ae68406b479acbbd4bb",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "This is more old than my grandma, but:"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "list-unordered",
                                "key": "a01ca4eb48d9454383aa20ae14b01766",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "block",
                                        "type": "list-item",
                                        "key": "b6707b7c2d044c41b6210995f94c376e",
                                        "isVoid": false,
                                        "data": {},
                                        "nodes": [
                                            {
                                                "kind": "block",
                                                "type": "paragraph",
                                                "key": "ff064efb3d274ffb87a37c9b0acde856",
                                                "isVoid": false,
                                                "data": {},
                                                "nodes": [
                                                    {
                                                        "kind": "text",
                                                        "key": "613528b5504c422a9e9e81a2bfe809c3",
                                                        "ranges": [
                                                            {
                                                                "kind": "range",
                                                                "marks": [],
                                                                "text": "\"Functions hould do one thing. They should do it well. They should do it only.\"."
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "daaf2d09a2594450bf5194afa7324d3f",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "35a4642195544b01a1a8e7b91f2a4b6a",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "5fb8b61a66c34081a90cfc9a8705922b",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "\"The smaller and more focused a function is, the easier it is to choose a descriptive name.\";"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "49c27df4162c4960be6bb817363419d4",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "7e6dcddd76e04f1ba7a8b09db8099cb1",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "1894ab9b195f439db9f3c5f108f4df87",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "This one is a little bit tricky, for me especially:"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "list-unordered",
                                "key": "67ba36f49f194f56bba051554310c7cd",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "block",
                                        "type": "list-item",
                                        "key": "0879c770ecc84225a6dcaddbd9e1f03b",
                                        "isVoid": false,
                                        "data": {},
                                        "nodes": [
                                            {
                                                "kind": "block",
                                                "type": "paragraph",
                                                "key": "99ec7117420643c6bd3ff2dfd4c69b2e",
                                                "isVoid": false,
                                                "data": {},
                                                "nodes": [
                                                    {
                                                        "kind": "text",
                                                        "key": "f991898810b848028095935af58467b4",
                                                        "ranges": [
                                                            {
                                                                "kind": "range",
                                                                "marks": [],
                                                                "text": "\"The ideal number of arguments for a function is zero (niladic). Next comes one (monadic), followed closely by two (dyadic). Theree arguments (triadic) should be avoided where possible. More than three (polyadic) requires a very special justification -- and then shouldn't be used anyway.\""
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "kind": "block",
                                        "type": "list-item",
                                        "key": "ce645ecff7004231b26acfc2eb331c64",
                                        "isVoid": false,
                                        "data": {},
                                        "nodes": [
                                            {
                                                "kind": "block",
                                                "type": "paragraph",
                                                "key": "11fcee646a0944a2838a501e3e8d4eb5",
                                                "isVoid": false,
                                                "data": {},
                                                "nodes": [
                                                    {
                                                        "kind": "text",
                                                        "key": "7ee3226dd2c24e8d86bb42acd9b508ef",
                                                        "ranges": [
                                                            {
                                                                "kind": "range",
                                                                "marks": [],
                                                                "text": "Creating objects to agregate variables isn't cheating!"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "158575b695d340c1ad73dd8b11ca74eb",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "e964b0d83e474b7a9bb3f719adf86cd8",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "fa604a65288747b38819f9fef628d595",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "\"Functions should either do something or answer something, but not both\";"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "a1d17c3f199f45ce8a5b6f4616ed5b9f",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "f25a684a7aff4375bae403ffd2bc08fb",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "1ba2ae59966e40e08f2aeb701d103d41",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Give it a try to try/catch blocks;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "f1a077ec2a9042a184f339f22f08f56c",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "3608745525e744c5856ba01266ad9dce",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "17b8cf94ab9f4f7e947feedecf87f989",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Functions that handles errors, ONLY handles erros;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "752cc0a58b1b4887831113d902854b66",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "15304b8ef1ae43c0b62f78a4f1495456",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Don't Repeat Yourself(DRY)"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "dbd78694f3a14b2c872c25a179e48b4a",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "09ac8dcd1fa14c9fb10fd584025dc397",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "In the book this part is one of the functions parts but I think it's worth it to add more to it later on."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "2c2ba11aeddf48a2bd4f5d81025707e2",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "9a35b2ee0cd84f8da02d7445a061ec8a",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "\"Duplication may be the root of all evil in software\" -- To a given extend, I couldn't agree more."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "592154ef8b044ceb8d74e32f55316fcb",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "9a9f0dddfca243dd98520f902038b104",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "\"Every time you see duplication in the code, it represents a missed opportunity for abstraction.\""
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "4d227c285c194225bff3f16da9b0720f",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "1fcd243636714ae4979e8335c288ff1e",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "The funny thing about absctration is that they might be irrelevant when you are doing some classwork or something like it but try to go a step even further, when you don't always know all of the code, to see that absctration helps you write code when you are using something wrote by others. A simple example is to see that you know that a print function expects variables and sometimes a mask, but do you know how they are processed and shown in your console? Anyway you expected to work properly because the absctraction point is in a level that you don't have to care with lesser important matter of it."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "d25370f63f8c4c449c0886476c4ec7b6",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "67676630a387490b9a8888d677faeb69",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Comments"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "3abf60b0d6b54e30a32d0107cf8f5e8d",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "35e6e2daf80c4c589e581558192554c6",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Comments are last resource tools, if you need a comment, stop, rethink it and than try it to refactor the code, even then if you fail to do so, and only then, write a code to better explain yourself."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "70ea0647a4cf4309ae77ab54359c7d1f",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "9881b93f6df14456bd346bcec20e087f",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "TODO comments could be a nice remminder to pick up the things were we were left off."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "0a5321ceb3e5408d92e761bd95d515d2",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "f09dcc4840cc47068e8e5a3e25a8772c",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Formatting"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "5ca499b00b7a4986942171c2967d1576",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "88f17c2add05466e812757f53c2b23cf",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "italic"
                                    }
                                ],
                                "text": "Lost this notes due internet connection errors."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "307e25a990114ffcba020cc492544d02",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "5ec6f7e080c241799a31d9d278a21001",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Error Handling"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "c4ea655218e54beda1f9a6057eeb4345",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "47a07baa52b14fc7b3d749916cca4f57",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "\"Error handling is important, "
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "italic"
                                    }
                                ],
                                "text": "but if it obscures logic"
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": ", "
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "bold"
                                    }
                                ],
                                "text": "IT'S WRONG"
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "\"."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "list-unordered",
                "key": "03180cb0e6a0489e80ec04c62c39b900",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "c04e2608f8344f05a591d7376464a334",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "34a60debc97f4484837abb20148421a0",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "5ae92f0dc45a4733add1644872bd4544",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Use exceptions rather than return codes — that means if the language supports try, catch and finally statements you should probably being using it;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "b5fc585edf964b8193ffc7c1516a8c3c",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "a6184c4f932a421ca0c02954b16d6426",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "abac646ef0834ccfa5bcc6c931f52ef6",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "I didn't know that checked exceptions is an Open/Closed Principle violation."
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "5f68bc3954d74a71b4405031397e9e6a",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "624366e21c014ea39e882b5338f237bf",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Boundaries"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "4b0218bad7204852a918c429b78d7993",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "30dc35eaeaa44714af5cd785d6ae6f09",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "When using third-parties packages before anything else, write some codes for it; this will ensure that they work the way is expected to and, after bound to the system, the time that otherwise you would spend writing new test for it would be considerably reduced. Tests are a great way to understand the work of others."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-2",
                "key": "0fe43014ad96490e9f92ac81d647da95",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "eb9e6b0c21b1428baffc22a95ac309f5",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Artificial coupling"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "b4133dfbe8604f75bc7c295bd45e17aa",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "d2679cdc9974414287148f64485f97eb",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Is joinning two or more modules that serves no direct purpose in a temporarily convenient location."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "34e8e7e65972410cac9eadea4f07378c",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "f80712cfacce414896700c212c643a5e",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Three Laws of TDD"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "list-ordered",
                "key": "b46914a92e0e4391b57536086807254b",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "eebae62de6d04c9dad90ca2bd5becaf6",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "3a05b44493b94f11b257b4a594e2316a",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "4f87dceb5f964ff1a42c03a8b0845018",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "You may not write production code until you have written a failing unit test;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "5625b26f5e264f818347074c1fbacc04",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "ec1134a915db4b75a6527aa3ddf15ec0",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "6278874b629e45739c8ea041fb9386bb",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "You may not write more of a unit test than is sufficient to fail, and not compiling is failing;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "53e92851916d499d98d79418c537dddb",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "7b22388054844a109ac803fb311d79e6",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "34f65536e2a04770b914b69c66a46280",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "You may not write more production code than is sufficient to pass the currently failing test."
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "5edb526148cb49b2a25febbe89a727a8",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "49f23bc256d14e0fb80d8c8778dc3ae6",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "See more at "
                            }
                        ]
                    },
                    {
                        "kind": "inline",
                        "type": "link",
                        "key": "744641032ab74303ba235c3deea7ec63",
                        "isVoid": false,
                        "data": {
                            "href": "https://www.computer.org/csdl/mags/so/2007/03/s3032-abs.html"
                        },
                        "nodes": [
                            {
                                "kind": "text",
                                "key": "f9a9b2011b4b41ffb460aa9e55adc703",
                                "ranges": [
                                    {
                                        "kind": "range",
                                        "marks": [],
                                        "text": "this"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "text",
                        "key": "ea581ffec7fd4e91bc0b4f366ff248ec",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": " link."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "b9d1b126ab3047e9b510083404d0229b",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "a831a1c6d0a94c90a22bb46c0ae68e5a",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "F.I.R.S.T."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "f34ff9c7e8de48d3a1ce5bf8f5143fa0",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "9d366d8a07c34f3990a2491a9cae10db",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Rules for a clean testing:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "list-unordered",
                "key": "e1cc117188934b97beb86b6ee20e68c4",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "bbe15b12eaf142bb92e57046842d79ed",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "c1734b7a08b0497dbea103b589214f92",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "dc0ae43234324035a0766e08ebbbe921",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "bold"
                                                    }
                                                ],
                                                "text": "F"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "ast: a slow test results in a slow fix it, letting the code to rot;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "2f324ad64d814aca8dfcdebc03d7d877",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "62e63873b9f6405390b42879b6e3c98c",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "d9fff483995148888aa538967645c3d7",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "bold"
                                                    }
                                                ],
                                                "text": "I"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "ndependent: when one test de depend on another one, the first one to fail causes a cascade of failures, making it hard to diagnosis;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "ad29e161a23d4b3aa7d0fdee614c9a66",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "4dafe23276c141e28ac7e4f2ec5c8374",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "cf673c2845754d23b01a9dacd2664e6a",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "bold"
                                                    }
                                                ],
                                                "text": "R"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "epeatable: if the only work in one specifc machine would they really be testing all kind of enverionment? No! Tests should run in any machine because te real code will run too;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "fc4e2d46af3f411f82b15750196f6578",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "33fa461fc1a746ea89b98d25da7a9766",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "b21cc9e0b4a24280b2352d10fdc76f82",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "bold"
                                                    }
                                                ],
                                                "text": "S"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "elf-validating: either they pass or fail;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "604a3c93d2b3485db9d85f72322ef684",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "8afc4999236b4985898da7b35539eb3b",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "b3c42718c2fd46b193a4605a0749e90d",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [
                                                    {
                                                        "kind": "mark",
                                                        "data": {},
                                                        "type": "bold"
                                                    }
                                                ],
                                                "text": "T"
                                            },
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "imely: tests comes before the coding."
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "a98ec32bd8cd4c4ab3858d86223a6a9e",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "ecfbe10b12e94ded9cca9ca829fca51d",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Here We Go"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "embed",
                "key": "af0500a06fe54f36a0c60643816d2a00",
                "isVoid": true,
                "data": {
                    "url": "https://imgs.xkcd.com/comics/standards.png",
                    "type": "image",
                    "embed": {
                        "type": "image",
                        "url": "https://imgs.xkcd.com/comics/standards.png",
                        "width": 500,
                        "height": 283,
                        "aspectRatio": 0.566
                    },
                    "caption": "https://xkcd.com/927/"
                },
                "nodes": [
                    {
                        "kind": "text",
                        "key": "7bf3e71cc67c466ab3bec2c5b954fbf2",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": ""
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-2",
                "key": "fe2cd7f9a80949c2bb379a04efedcbec",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "265ca08f24e44e2ca82d22e28dfc91d2",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "The Single Responsibility Principle (SRP)"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "8ea5c8d501ea4c59ba77a3e42df39295",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "075e5d4aa8e242b983378ba6c4d8a29d",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "\"You should have one responsibility -- one reason to change.\""
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-2",
                "key": "7177380ef8704e40ab0b2e51b88bde95",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "9c27ce7a65be41ae98e4bb1e8ab65f5e",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Cohesion"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "9dcd728571e94869ad48829f5044c1a0",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "8ad84b7a66f148798a952753e5907234",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "A method should manipulate one or more variables; the more manipulates the more cohesive it's, which is not advisable to do it because a high co-dependency increasing logical as a whole."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-2",
                "key": "3771793e1f0e42c284da75a83616e67e",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "10599924a8694a58a0b24f18c5035b3f",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Open-Closed Principle (OCP)"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "0bcad07143d64092a4d9a0fb9da1d7af",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "eb939a4bfaa143d68fc3f802c3f36f91",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "\"Classes should be open for extension but closed for modification.\""
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-2",
                "key": "c50597ab51db4403812d4145d0917d70",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "7b55c41c22844cc3953d450ae0a9e2f2",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Dependency Inversion Principle (DIP)"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "06e1eadaa5bf4746bd4b5e4d43735100",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "f4f2b45210764f99a9ee16c5a460162b",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "\"Classes shoul depend upon absctractions, not on concrete details.\""
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "ad7911fa078446ae80335b15ad5ad5ba",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "8d1cde41d27b4176a461433c53c8b2ae",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Systems"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "b8dc5d076adc48dca5f1572a79b6f43c",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "0ce25900e9864df7be752e7be48eabd2",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Clean code is a mean to a way of management of low level abstractions, higher ones are managed through the system level."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "fc80ad83808f4bd5964e20289144dc4c",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "165ed3379dbb4efca471ce68fa211f1f",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "It's better to read the book on this one."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "4a83278419994ab69389a75d2f1307e2",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "b41a89e29d81489685fc31f08f09d598",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Emergence"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "6738c8a3137f41c8993d79820af20f04",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "d14c7b14d90741c5b8de3570a4f9ecd8",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Kent Beck's four rules of Simple Design:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "list-unordered",
                "key": "47b078900aa84375ad31b372961c5d13",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "d47d649769f1411b961a8a8ba86b3fd0",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "01287a49e99542c99f7de650bd2b6723",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "7e9c57110ca94c18a6cba3caa298f53b",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Runs all the tests -- if you cannot test, you cannot ensure that it works properly -- even testing this is a bold statement to do it, so be cautious about it;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "1952c58c6c60425b9cb9abdb30a49bd3",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "1b92d2b13292416b9168e36aed476605",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "0607a36d50904cb6a6cb2f0a255d3e74",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Contains no duplicaton;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "9a4da4577d8c444fb9b0a271c666133c",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "e691b0a1b5a54bf0801b2861d9d421f2",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "caf63a215c4f488cb1b56fe79db2dbea",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Expresses the intent of the programmer -- using the pattern aplied as name for a method is a good design;"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "31c1a80b20e14e7ca0b526337c6744e4",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "bea5676191d540789b6676648b6bfdfd",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "da4c6bfc247c40109de206de767e2279",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Minimizes the number of classes and methods."
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "6ec55645acaa419184d9b0b31bd4728f",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "ab692fc71c6546de8d4f8d49add9a504",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Concurrency"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "273e7df5aecf46d2a656ef8ae6b98559",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "122452fd86304bcf983a3c4425816f7f",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Concurrency is about breaking the "
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "italic"
                                    }
                                ],
                                "text": "what"
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": " gets done from "
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "italic"
                                    }
                                ],
                                "text": "when"
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": " gets done -- single-thread couple those concpets."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "b6c03a162a0949f582997fc24663aac8",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "19a7146668904e1eaeea68f25e04e72b",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Concurrency is an extensive subject, reading the Wikipedia page "
                            }
                        ]
                    },
                    {
                        "kind": "inline",
                        "type": "link",
                        "key": "2b113f1f76ce42ee98d21f52e012b817",
                        "isVoid": false,
                        "data": {
                            "href": "https://en.wikipedia.org/wiki/Concurrency_(computer_science)"
                        },
                        "nodes": [
                            {
                                "kind": "text",
                                "key": "371d9078cfdd48c9be862898bdad5cf9",
                                "ranges": [
                                    {
                                        "kind": "range",
                                        "marks": [],
                                        "text": "about it"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "text",
                        "key": "b739aef93943417ca49dcbde0c52c0ac",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": " before proceding is adivised. It's a short reading. And other concepts also:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "list-unordered",
                "key": "e907e41d24cd45ec82e4f2a28f26368f",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "fb0bd4feebb6480c9b8f30979ce8cfd9",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "e9e5359d8b93446f989ab03200bf7946",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "bc14a80242b84ab5bdd82fbe675ccdd3",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": ""
                                            }
                                        ]
                                    },
                                    {
                                        "kind": "inline",
                                        "type": "link",
                                        "key": "9a008ddc25384fd5851fc2a777f89e40",
                                        "isVoid": false,
                                        "data": {
                                            "href": "https://en.wikipedia.org/wiki/Producer%E2%80%93consumer_problem"
                                        },
                                        "nodes": [
                                            {
                                                "kind": "text",
                                                "key": "973be689f6694811b20b5280198582bc",
                                                "ranges": [
                                                    {
                                                        "kind": "range",
                                                        "marks": [],
                                                        "text": "Producer-Consumer"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "kind": "text",
                                        "key": "e95fe15146b84b3688e760ab93c702cf",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": ";"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "740f4bfaf010440e84ea67316f533ddd",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "e44b16740de64e31b077523007301d37",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "4b44cd3c77d54d13a88b7e66b8ef5973",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": ""
                                            }
                                        ]
                                    },
                                    {
                                        "kind": "inline",
                                        "type": "link",
                                        "key": "b4215f40957d4dc9ad49af0d5b565c25",
                                        "isVoid": false,
                                        "data": {
                                            "href": "https://en.wikipedia.org/wiki/Readers%E2%80%93writers_problem"
                                        },
                                        "nodes": [
                                            {
                                                "kind": "text",
                                                "key": "8eea01fc60864297b3a6d8d2dca33113",
                                                "ranges": [
                                                    {
                                                        "kind": "range",
                                                        "marks": [],
                                                        "text": "Readers-Writers"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "kind": "text",
                                        "key": "0de1fa5bb9ef486bbc23d46ca421a5ad",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": ";"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "a85b5d3d4af84483ae5bbd344e385127",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "e60e2793cf734ab29ebdcf66e56495f3",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "7d14870ba8304cc3928dca0d70c1bbf2",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": ""
                                            }
                                        ]
                                    },
                                    {
                                        "kind": "inline",
                                        "type": "link",
                                        "key": "35e310d5816545938ccfc0918d62201c",
                                        "isVoid": false,
                                        "data": {
                                            "href": "https://en.wikipedia.org/wiki/Dining_philosophers_problem"
                                        },
                                        "nodes": [
                                            {
                                                "kind": "text",
                                                "key": "9395aaa150d146439a3728f1b21649c1",
                                                "ranges": [
                                                    {
                                                        "kind": "range",
                                                        "marks": [],
                                                        "text": "Dining Philosophers"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "kind": "text",
                                        "key": "890f7df66ddd41d6b87365fff98aed46",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "."
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "128cfc9f27044dcb95d00e923aab1acc",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "26e980c8da0a409eba40e31e23397cc7",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Concurrency problems are not so easy to solve, especially when some of the threads are running in the client-side because the system itself looses some of the control compared to those running on the server-side."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "b3525060956b433ea3e6ad2d2b337a2e",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "f2b697898bd143528ad90f2e568fb55e",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "About testing concurrent code, it's better to read the book since would take the same amout of words to describe it here. And besides that, reading the Apendex about concurrency it's like reading another different book by itself, more worth it then I've expected."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "86489fdd606243cf99bf7f9908206101",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "20d522d87d7c4c6e87a3c55745cf43d5",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Successive Refinement"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "306877c3bc7e4f139151de3edd6cd419",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "0533989ccbe44f6f8b0e3fc9ec848b72",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Instead of saying that a perfect code doesn't exists, answer the following questions:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "list-ordered",
                "key": "ee1fced3c01a4652bf6f2d5aa6231811",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "30dd956e87de490b9d13d5a6d6aa8e69",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "53b59535fa80445290a8a95e283da821",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "ac70186217754ee4bed5b34bc2f62ab3",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "Is there a language that never has updates that brokes/deprecates previous code or patch something?"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "f3f2e482cc2743d5b8533617983b93b9",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "0f72fe7b79e94801902bd5a8087ae051",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "5c4d4b428ace4df8ad482220571bd814",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "You always know everthing that has to be known?"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "block",
                        "type": "list-item",
                        "key": "f54fcdc0de9b473fa9e1e6c23e91e751",
                        "isVoid": false,
                        "data": {},
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "paragraph",
                                "key": "8eff55e725fb4cc2a6e5c9d35e2bc81a",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "9798d22933c34f0ab13cbf12f0340527",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "A program always control everthing that has to be controled on the environment on which is running?"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "0ef3ab2c3de14a2e90ddf0c7476f4e79",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "5490f11b0a8743908fc671fd8ef0c4d2",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Then how a \"perfect\" code should exists in this world?"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "42ad85ca24e24338ba4cdbc623a0ba93",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "f242f4c7ecc54c96a2faef72bafe8d07",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "A good code is good as long the one who wrote it and always will be something to improving since we are improving all the time, change languages and bringing some concepts from others backgrounds, seeing the code made it by others. Code is like wine, it's gets better with time."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "d1986a1dd7324f30bd295c27557692ea",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "eb8b9b54017a45dbb4a596f460a2aef0",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "\"Refactoring is a lot like solving a Rubik's cube. There are lots of little stpes required to achieve a large goal. Each step enables the next.\""
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "0b830bfacb354afabf83611793e8f0da",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "8fd0273abb3a49059e655ca707a2bae8",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "One thing to keep in mind when refining code is "
                            }
                        ]
                    },
                    {
                        "kind": "inline",
                        "type": "link",
                        "key": "24d0dd7329874a7db94aa3fe6c7eced7",
                        "isVoid": false,
                        "data": {
                            "href": "https://en.wikipedia.org/wiki/Principle_of_least_astonishment"
                        },
                        "nodes": [
                            {
                                "kind": "text",
                                "key": "95df89455b364f82b53e75417a3dc88e",
                                "ranges": [
                                    {
                                        "kind": "range",
                                        "marks": [],
                                        "text": "The Principle of Least Atonishment"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "text",
                        "key": "377113660ed2455ba3967d85f6456c20",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "ac7c17bc602844de985913d6d46336bf",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "6eefe1a40423405c8681faad059cd401",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Logic"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-2",
                "key": "3506b65a9a0741e7b90e344df0399cb8",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "f8347e8d99044857a72ca876cbe86f01",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "If or while statements"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "ab88e7f72b6b4d21a3d9c6affffa6b77",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "430ec9c1120c4dad886e497bd8f20991",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "A:Plain Text "
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "code",
                "key": "7a54e0b16b854cea9dcd53c1fc80636f",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "code-tab",
                        "key": "227867306ff14d45a80b0ef0117cae94",
                        "isVoid": false,
                        "data": {
                            "syntax": "ruby"
                        },
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "d5ab6cd8d668465795db324e1d246cd0",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "af1a87faedf8412eb290301e9b1274a9",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "if (isPayDay(date))"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "4bfcaf32ee104d508ca6787f0279d24c",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "e9e0a9c177ee486c98e4a901bbb28ada",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Is better than:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "code",
                "key": "d6d9caac744c4886be60f1eba7a6a77e",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "code-tab",
                        "key": "2c6be8eee7534b9694b5ed37bcf16826",
                        "isVoid": false,
                        "data": {
                            "syntax": "ruby"
                        },
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "99969b999b294560b9272bf86c634ec9",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "8e139ce9f24e4906b1d1b493164861dc",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "if (\"Monday\" == date.dayOfWeek && \"First\" == date.weekOfMonth)"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "df5a5ca5fc704f40be197b9e47f48e08",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "66672d8fdab3463da0b5a7921c633104",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "And, besides that, avoid negatives conditionals."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-2",
                "key": "bea7b1c3dbb240a5a5744eff0d9d0593",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "a6f09d7f15db427e88f5af5104059716",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Comparison"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "74ed09a1fc0a435fab2edd312b672e0a",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "2bfc46ed769b49b98c50c775074bb870",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "When comparing something, a good practice is to put the value first. So, instead of doing:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "code",
                "key": "c64306a3c5bf4f3eb33182afb5377ee9",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "code-tab",
                        "key": "1c848bf065494ce082b3ccce2a3882f9",
                        "isVoid": false,
                        "data": {
                            "syntax": "c"
                        },
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "df0a05f29d7a48bbbbccde2a08b1ac34",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "49325b9a54234343a35e1c473a34e144",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "if (answerToAllQuestions == 42)"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "d00956e4b44343e2885ade6b831d67c0",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "03d644fb67e045d5b8e5a2b3ff641f62",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Try it doing:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "code",
                "key": "c2c709a1e2224eaa90dcc965d2319f6c",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "code-tab",
                        "key": "e0110e87b4ef4271a7169da42cec1630",
                        "isVoid": false,
                        "data": {
                            "syntax": "c"
                        },
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "fc136e80f8d74d39aa3741769b40c724",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "42f8adf990bb473db7c280e40c16ce92",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "if (42 == answerToAllQuestions)"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "27420c855a0f41a7acfa68ded31a1694",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "eee5edc71f5d48cb946b213dd2586650",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": " That's because if you mis-type and forget to put a equal from a comparison it will become an atribution:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "code",
                "key": "254bd78f40b0475380bfb7a9d16941fe",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "code-tab",
                        "key": "6f41d5249d764c6188579a42104cc16a",
                        "isVoid": false,
                        "data": {
                            "syntax": "c"
                        },
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "cdacf98b147446939f086386b988a3cb",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "615b4ee9e1564fec962c0b129e69f6e7",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "if (answerToAllQuestions = 42)"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "ac9297fc2bd24d24a90a4783a9c168a7",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "dcfe958b8cc14e399a97159b725a27e7",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Which many compilers won't catch as an error or even a warning since comparisons like the following are allowed but are not a clean way to read a code:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "code",
                "key": "dafe058ef9ee4e619e11d9b209f4ea44",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "code-tab",
                        "key": "69d2028fc00646d88eab1746429aced1",
                        "isVoid": false,
                        "data": {
                            "syntax": "c"
                        },
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "698ef8141966487a88db46a9f38bf93c",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "04eb43759f4c4d6885bd83d350555866",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "if ((myPointer = malloc(sizeof(int) * 42)) != NULL)"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-2",
                "key": "6a3e2d89411745709d5f6dcbeab6f3be",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "7f5496f49fdf40b3b448ca7fcc8b18b8",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Variables"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "911af7bcd030494ea1458ea18e465cf1",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "6a143ee6c69d40deb37702c08cea7565",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "If you had to declare a variable in the middle of the code, probably this part of the code should be in another function."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-2",
                "key": "841a52a2780544089bba797c7e177b43",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "333bfa2747344c52a8358aa827fcd258",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Abstractions"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "b104e3df0aa14982811a7b1f92e5a23a",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "bbcc9d0f8e914c8ea976d5ebc0556516",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Remember that "
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "bold"
                                    }
                                ],
                                "text": "what"
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": " is different than "
                            },
                            {
                                "kind": "range",
                                "marks": [
                                    {
                                        "kind": "mark",
                                        "data": {},
                                        "type": "bold"
                                    }
                                ],
                                "text": "how"
                            },
                            {
                                "kind": "range",
                                "marks": [],
                                "text": ":"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "code",
                "key": "1bc09a7895754d4f8b8388d90af3d2a6",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "code-tab",
                        "key": "bb4cd7973ac3448c8358b5193db1a164",
                        "isVoid": false,
                        "data": {
                            "syntax": "ruby"
                        },
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "e55e2aa323cf4f829084e791aeb73783",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "924e8c03605b41b29e4988119cfa8658",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "def printScoreboard (Team A, Team B)"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "74dd4c7e43604316bdac544cb1a00e88",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "89037bda6ac84ed394574b8dba51c4cd",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    puts \"Time: \" Time"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "334069c9efde4b628e1be0cef2a1cc5d",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "1e93613c1c354cfc90128cf833929cc6",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    puts \"Home: \" A.name \" Shots on goals\" A.goals"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "059d67b25fac42c6ad633ce56802c5d4",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "849a6df15c7649dd9556d4225ddc4feb",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    puts \"Half: \" Match.half"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "6e945cdcab5e405c86273a057d8a6504",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "78f7fb27c1874be58acdd1a8eb47e5f2",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    puts \"Visitors: \" B.name \" Shots on goals\"  B.goals"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "4f6eccce85a4425aafcd225e1940d6a1",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "7c2926cc0e60437d98e2eaeeb512905f",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "end"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "3a0a360c24b7481097569f57373b2732",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "24b539fabfc5492092581964b5cffa41",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "printScoreboard should not know how to the data is parsed but only know that needs to call it the functions that print them:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "code",
                "key": "f80ce713a1944a2ba9f9399cdcfe4306",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "code-tab",
                        "key": "d015cc2e72894d0c8c3483f13468c9fa",
                        "isVoid": false,
                        "data": {
                            "syntax": "ruby"
                        },
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "738f8bc13ad84c4c9e17ad9d8d6d5b84",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "0116f8a71c5c48279c6ae34c166790f0",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "def printTime"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "83328b785643461786ec7d72b791e47c",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "7dae9832a0984dd0bc905e7de6eab719",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    puts \"Time: \" Time"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "c119d87b825647519ae2ffc6f7d2a49e",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "ec0afcb6a81b4fa28bf8c7b58f7fea22",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "end"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "fb8de3f13fde4a3db426c30cf8d77c99",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "52149fb68ba64b07a8b528da14d8aeb0",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": ""
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "dc02e76d362841a2b3f901b4b1a3550e",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "fc583926722448eea50119e44fa6a327",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "def printHalf"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "08dfe640db3a4ebe99af17f0253ee022",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "97c307c1a5a541b39813ec4c40cbc588",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    puts \"Half: \" Match.half"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "d9695dd284a04a46bc10c38f6fa346a0",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "151591ebb46e4b4eb5ffbb32d6509765",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "end"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "8f984285f4d04d0f8ab6f04e1a70dcea",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "2b7027f6a9a2489a9415c2fbce8cde94",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": ""
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "737b954491c749779418b250cff44dfd",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "a6a5667e201e42e9a929a5f7ebad150b",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "def printHomeTeam (Team team)"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "4aa63a8193a447e38a0bf705f0dad99f",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "02e58e3917be4ea3b13c0975585155cf",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    puts \"Home: \" team.name \" Shots on goals: \" team.goals"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "2e485c4b86f64ae98a0177c9c2a6c9aa",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "75bf2dc9ab5a4aec91829b0e1c9f7cca",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "end"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "9bbbc408af154fb5a1a49e999328782e",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "09ad1458980448469375bbfaa96c36af",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": ""
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "7d8b56c9998a4857a884073f9315f478",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "64a5538ff89b4234b1018a982dcdfd11",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "def printVisitorsTeam (Team team)"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "ebffd78384c84202b80182b2eb1e1029",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "9fc3576a9cb34ccb8e3a78474fbd8e56",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    puts \"Visitors: \" team.name \" Shots on goals: \" team.goals"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "1211e100cbe74c448acaa71376ef29f2",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "d309a8a544284cfda94c069a58b7ef57",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "end"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "42b2875ee4004e4daf85736b5544c7b3",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "3af81a1c94a549a7bcba5b9f7113c8db",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": ""
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "2ae2cc84fff743a0aecb33fd56b2d6e0",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "14b2bb8c8418413e8082d6ac33462118",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "def printScoreboard (Team A, Team B)"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "c03e6c90fd33493c8387a8c25be26f42",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "6828cba5993b48acbe791c02140532dd",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    printTime()"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "24842fdb1a6c477ca02b024fb4f1f629",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "a9b67b6ceca741bebd5189431081760c",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    printHomeTeam(A)"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "82c82d288abf448a81a6c969de6b17d6",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "5a19ff54eccb4434946dd9a8f3b2dc4b",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    printHalf()"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "a3fbba9683984ba9b2fd5295875c06f4",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "c54f95e2b4cc45f0932b396e9004f291",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "    printVisitorsTeam(B)"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "93957d72106f40dda6d94c28ea1ecc6f",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "b06bd097f6514b6f8fa1b1cc1066b4b8",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "end"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "ca783ee4403f46ef86a54e1012af239e",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "e5c2761ed303438fa38ef71b7aa983c9",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "This sounds more difficult than appears? Because it is!"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-2",
                "key": "c52ce299225c448dac1d69b740feab0c",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "84e6e4c8140f432b86ef2cb6f05293cc",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Avoid Transitive Navigation"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "ef63a3544a9b4b6d9cd6cecdf3ddfde5",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "2c6a091e4e674b05b71a0470177a9c79",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "JavaScript programmers are going to hate this but, asside from Promises, why keeping navigation through a variable that anyone who reads the code besides you are going to think that as \"what the heck is going on here?\" aka "
                            }
                        ]
                    },
                    {
                        "kind": "inline",
                        "type": "link",
                        "key": "21c643dc01514843a1512abf192d3303",
                        "isVoid": false,
                        "data": {
                            "href": "http://www.thinkcode.se/blog/2011/12/30/how-many-train-wrecks-are-lurking-in-your-code"
                        },
                        "nodes": [
                            {
                                "kind": "text",
                                "key": "e0b7fa7e561d4644b56612d41f1e0469",
                                "ranges": [
                                    {
                                        "kind": "range",
                                        "marks": [
                                            {
                                                "kind": "mark",
                                                "data": {},
                                                "type": "bold"
                                            }
                                        ],
                                        "text": "train wreck"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "kind": "text",
                        "key": "99d9665a686d4832ae6fd54cae62947a",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "code",
                "key": "c8c28a7b7cd441e9958cfd3bd3d83ca4",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "code-tab",
                        "key": "442f4f4109c549079b454264ca783ea7",
                        "isVoid": false,
                        "data": {
                            "syntax": "javascript"
                        },
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "e4634b5b10f14959a08133a8d6669e45",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "fc1e55ade4ff458180f36887d47f2fa8",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "const meaningOfLife = World.getHumans().getPerson(\"John Doe\").getTastes().sort()[0]"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "e3ff59444c69439680d933ed1bcb6986",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "08d5722a9b75455581487e50eb3a152c",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Should be:"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "code",
                "key": "8290760365c140b9849b76cb142f2896",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "block",
                        "type": "code-tab",
                        "key": "4e62dc24bc31448c90379ed55735591c",
                        "isVoid": false,
                        "data": {
                            "syntax": "javascript"
                        },
                        "nodes": [
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "cc25349a86114d6886d5a414ae9daa90",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "442a688b6e8e48d4b1bf03ea8e6579f3",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "const humans = World.getHumans()"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "2343fd1cfca542038970bba8637ca9b5",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "d8b1c3aeab0f45059b76bf0f2b200f3c",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "const you = humans.getPerson(\"John Doe\")"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "acb40ba122de4c6996502605ce37b687",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "e5c7a04a01124c64b4aaad9498a0705b",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "const tastes = you.getTastes()"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "kind": "block",
                                "type": "code-line",
                                "key": "0261d9ab74264bf59d0ea9d2201bb6fd",
                                "isVoid": false,
                                "data": {},
                                "nodes": [
                                    {
                                        "kind": "text",
                                        "key": "fe205afe8e2d4fc883af3e838688ed25",
                                        "ranges": [
                                            {
                                                "kind": "range",
                                                "marks": [],
                                                "text": "const meaningOfLife = tastes.sort()[0]"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "fe92ec48abeb412d8fa7293480315224",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "5c690fe84aae463d9ac83baa2e116245",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Code review"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "d90788e212cc49df95fda0c9447c1cb5",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "b63804d3bebe4ccd8165fe825e3b7b8c",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "When doubting about your code, find someone to read it without you having to explaing it; listen to this person feeedback a take some lessons from it. This might help you improve you current project."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "ab0b8eba2213413fb30081f1f0d2ecdd",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "a76496b462ff46038892bc0cab6dbd1f",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Having to always look at the same code and expect to find something new to improve is kind like to throw a dice that always shows the same side expecting to show another."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "f96a93df64b64c4e94d09fd5d875a3bf",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "66a3d9bff2574c9980d552b47ab3aac5",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "What I felt that is missing"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "93873727af954f88936ef6faf4b59d41",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "6d960ac2f9f14acb9c0f9311bdad6014",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "Articles that shows some statitiscs about it. I know that software engineering is imporant after I felt the need of my own and seeing how my performance improved after it; but the lack of meanfull way of aproaching the issue of showing how much changed has changed is troublesome. I've heard some of my professors calling it sotware engineering as a \"pseudo-science\" and I cannot disagree in a way with them, how someone can clain improvements without the way to measure it?"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "2671dd1705524c859d864ad8a4db2023",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "fd4be5847dd5461789d8d0ba0912a105",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "The book itself has a great follow up list of books that are easy to find, I will check out some of them soon to help improve here."
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "heading-1",
                "key": "208770df4f294c108cf0cbc6e1d677a2",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "99b2a148392641f3bc809b416910bdfb",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "What I felt true"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "block",
                "type": "paragraph",
                "key": "27ad34b3b657401bbb361a423b31b6b4",
                "isVoid": false,
                "data": {},
                "nodes": [
                    {
                        "kind": "text",
                        "key": "edc733e305804de89602e47171ec036e",
                        "ranges": [
                            {
                                "kind": "range",
                                "marks": [],
                                "text": "I've began to write tests a short time before reading the Clean Code, but it says that when write tests your code is improved overall because you improve the design, and that's true in my own experience. I didn't use TDD when I wrote my first test and I had to re-factor a lot of code to ensure that the tests worked properly, but when I did that my think process changed a little bit and that's when after I've started doing TDD without even noticing; my code went for a high coupled functions to a more absctract even better named concepts and this improved a lot the time spent on thoses tasks."
                            }
                        ]
                    }
                ]
            }
        ]
    }
}